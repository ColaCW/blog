package ${cfg.packageName};

import com.lgq.common.util.BeanMapperUtil;
import com.lgq.entity.admin.${entity};
import java.io.Serializable;
import java.time.LocalDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import org.springframework.format.annotation.DateTimeFormat;

/**
 * ${cfg.comment} DTO
 *
 * @author ${cfg.author}
 * @since ${cfg.date}
 */
public class ${cfg.tableName}DTO implements Serializable {

    private static final long serialVersionUID = 1L;

    #foreach($field in ${cfg.fields})

    /**
     * ${field.comment}
     */
    #if(${field.columnName.indexOf("_AT")}!=-1)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd HH:mm:ss")
    @DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    #end
    private ${field.propertyType} ${field.propertyName};
    #end
#if(!${entityLombokModel})
#foreach($field in ${table.fields})
    #if(${field.propertyType.equals("boolean")})
        #set($getprefix="is")
    #else
        #set($getprefix="get")
    #end

    public ${field.propertyType} ${getprefix}${field.capitalName}() {
        return ${field.propertyName};
    }

#if(${chainModel})
    public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
#else
    public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
#end
        this.${field.propertyName} = ${field.propertyName};
#if(${chainModel})
        return this;
#end
    }
#end
#end

    @Override
    public String toString() {
    return "${cfg.tableName}DTO{" +
        #foreach($field in ${table.fields})
            #if($!{foreach.index}==0)
                #set($propertyName=${field.propertyName})
                    "${field.propertyName}=" + ${field.propertyName} +
            #else
                    ", ${field.propertyName}=" + ${field.propertyName} +
            #end
        #end
            "}";
    }

    #set($end=$entity.length() - 2)
    /**
    *  将DTO 转换为PO
    * @param poClass
    */
    public ${entity} transDtoToPo(Class< ${entity}> poClass) {
        return BeanMapperUtil.copyProperties(this, poClass);
    }

    /**
     * 将DTO 转换为PO
     * @param po 需要转换的对象
     */
    public void transDtoToPo(${entity} po) {
        BeanMapperUtil.copyProperties(this, po, "$propertyName");
    }

}